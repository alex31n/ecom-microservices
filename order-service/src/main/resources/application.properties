spring.application.name=order-service


# environment profile
spring.profiles.active=${APPLICATION_PROFILE:dev}

# server information
server.port=${SERVER_PORT}

# config server
spring.config.import=optional:configserver:${CONFIG_SERVER_URL}
spring.cloud.config.fail-fast=true
spring.cloud.config.retry.initial-interval=3000
spring.cloud.config.retry.multiplier=1.3
spring.cloud.config.retry.max-interval=5000
spring.cloud.config.retry.max-attempts=20


spring.datasource.url=${DATABASE_URI}
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

spring.rabbitmq.addresses=amqp://admin:123456@host.docker.internal:5672/

spring.cloud.stream.bindings.default.content-type=application/json

spring.cloud.function.definition=paymentConsumer
#spring.cloud.stream.bindings.orderSupplier-out-0.destination=order-orchestrator
#spring.cloud.stream.bindings.orderSupplier-out-0.group=order-queue

spring.cloud.stream.bindings.paymentConsumer-in-0.destination=payment
spring.cloud.stream.bindings.paymentConsumer-in-0.group=payment-queue